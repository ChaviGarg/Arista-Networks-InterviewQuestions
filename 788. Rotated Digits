class Solution {
    public int rotatedDigits(int n) {
        int count = 0;
        int[] dp = new int[n+1];
        dp[0] = 0; 

        for(int i=1; i <= n; i++){
            if(i <= 9){
                if(i == 0 || i == 1 || i == 8)
                   dp[i] = 0;
                else if(i == 2 || i == 5 || i == 6 || i == 9)
                   dp[i] = 1;
                else
                   dp[i] = -1;
            }else{
                int r = i%10;
                int q = i/10;
                if(dp[r] == -1 || dp[q] == -1)
                    dp[i] = -1;
                else if(dp[r] == 1 || dp[q] == 1){
                    dp[i] = 1;
                }else{
                    dp[i] = 0;
                }
            }
            if(dp[i] == 1)
               count++;
               
        }
        return count;
    }
}

Time : O(n)
Space : O(n)
